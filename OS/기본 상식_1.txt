
컴공이론

1. 1bit와 2진수
    - 1 비트란 '전기 스위치 1개'를 의미
    - 전기가 흐르는 On 상태는 1, Off는 0 이다

2. 4bit -> 2의 4제곱 = 16
    - 전기 스위치 4개를 조합 (경우의 수는 16)
    
3. 2진수, 16진수 진법 전환
    - 4비트는 16진수 한 자리 숫자
    - 16진수는 0 ~ F (10진수 15) 까지 한 자리에 쓴다
    - 0xF3 -> 8비트

4. 16진수표기 사용 예
    - 색상표현
    - 컴퓨터 하드웨어 주소표현
    - 메모리 값 표현

5. 8비트 -> 1 바이트 (Byte)
    - 1 바이트는 영문자 한 글자가 저장될 수 있는 메모리 크기이며, 관리의 최소단위 (한굴은 2바이트)
    - 정리
        - 1 bit - 전기스위치 1개
        - 1 byte - 8비트 한 묶음
        - 1 KB - 1024byte
        - 1 MB - 1024 KB
        - 1 GB - 1024 MB
        - 1 TB - 1024 GB

6. 컴퓨터가 글자를 다루는 방법 (ASCII)
    - 십진수 65
    - 컴퓨터에게 영문 대문자 'A'
    - 16진수로는 0x41
    - 숫자와 글자를 구별하지 않고 정보를 말할땐 바이너리(Binary)라고 한다

7. 컴퓨터가 사진을 다루는 방법
    - 모니터 화면 상 점 하나를 화소(pixel)이라고 함
    - 여러 점을 모아 사진을 만들 수 있다.
    - 화소 하나를 표현 하는데 8비트, 16비트, 24비트, 32비트 정보가 필요할 수 있다.
    - pixel이 작을 수록 화면이 매끄러워 진다.


컴퓨터 구조

1. 디지털 회로
    AND, OR, XOR, NOT
    
정수기준

    컴퓨터가 덧셈 하는 방법 
        - 2진수 1 + 1 은 2진수 10(2)이다
        - A가 1, B가 1이면 XOR 연산결과 S = 0이다
        - 동시에 A가 1, B가 1이면 AND 연산결과 C는 1이다
          이 1은 자리올림(Carry)이다

    컴퓨터가 뺄셈 하는 방법
        - 6에 4를 더하면 10이다. 즉 4는 6에 대한 10의 보수 이다.
        - 보수를 덧셈하면 자동으로 뺄셈도 가능하게 된다.
        - 2의 보수 = 1의 보수 + 1

        곱셈 -> 여러번 더함
        뺄셈 -> 여러번 뺌

    컴퓨터가 곱셈 하는 방법 (shift)
        - 왼쪽으로 밀때마다 자리가 바뀜(  x 2의 효과 )
        - 자리올림은 버림, 채우는건 padding
    
    컴퓨터가 나눗셈 하는 방법 (shift)
        - 오른쪽으로 밀때마다 자리가 바뀜(  / 2의 효과 )
        - padding이 왼쪽에서 발생

2. 컴퓨터가 연산하는 과정

    - CPU + RAM

    - 메모리와 가장 비슷한 형태 - EXCEL

    - 기억장치의 종류
        1차 메모리 : RAM (1차까지는 휘발성)
        2차 메모리 : HDD, SSD, USB disk 등 (비 휘발성)

    - L1 ~ L3 Cache Memory
        - 어떤 연산작업에 있어서 속도를 위해 미리 데이터를 예상해서 작업영역에 가져옴

    - 레지스터는 개별 기억공간마다 고유 이름을 붙인다.
    - 주 기억장치는 일련번호를 붙인다.
    - 보조기억장치는 트랙번호와 섹터번호를 붙여서 관리한다.

    - 0번트랙 0번섹터 - MBR 마스터 부트 레코드
        - 부팅작업..


3. 개념

    동시성 
    - 여러 가지 일을 동시에 진행하는 것

    병렬성 
    - 같은 일을 여러 주체가 함께 동시에 진행하는 것

    원자성
    - 프로세스 진입 동시에 Lock - 해제 시 UnLock
    - 어떤 작업 진행 시 싱글로 진행하는

    동기화 
    - 신호등과 잠금 장치의 필요성과 유사. (교통정리)

    교착상태 (DeadLock)
    - 작업을 진행해야 하지만, 자원이 없음, 혹은 접근할 수 없음

4. OS
    - Computer 는 H/W와 S/W로 구성
    - S/W는 Application, System으로 구분
    - 가장 대표적인 System S/W는 OS(Operation System)이다

    - 프로그램, 프로세스, 스레드
        - 프로그램은 설치하는 것
        - 설치된 프로그램을 실행하면 프로세스가 생성
        - 스레드는 프로세스 속에 존재하는 실행 단위
        - 스레드는 프로세스에 할당된 자원을 공유

    
    - 메모리 (Stack, Heap)
        - Stack : 스레드가 사용
        - Heap : 프로세스 전체가 사용

    
    - Kernel
        - 운영체제의 핵심
            - I/O 제어
            - 자원관리
            - 접근 통제

    - 가상메모리 시스템
        - 각 프로세스 공간을 완벽하게 분리하고 통제할 수 있다.
        - 프로세스 오류가 운영체제에 영향을 주지 못하도록 차단할 수 있다.
        - 메모리가 부족해도 여러 프로그램들이 작동하는 등 자원을 효율적으로 활용할 수 있다.
    
5. 자료구조
    - Stack 
        - Last In First Out 구조
        - 처음 넣은 것은 맨 아래 바닥에 깔린다.
        - 두번째 부터는 처음 넣은 것 위에 쌓인다.
        - 바닥에 있는 것을 꺼내려면 위에 쌓인 것들을 모두 치우는 수 밖에 없다.

        언제 쓸 까? 
        - 프로그램에서 ctrl + z 같은 것들을
    
    - queue
        - First in First Out 구조
        - 버스를 타기 위해 줄을 서는 것과 같다
        - 은행에서도 비슷한 경험을 할 수 있다.
        - 동기화하고도 중요하게 연관됨
        


    

    
    






 


