
프로세스, 스레드, 멀티테스킹, 멀티스레딩, 멀티프로세싱, 멀티프로그래밍

1. 프로세스
    - 컴퓨터에서 실행 중인 프로그램, 
      각각의 프로세스는 독립된 메모리 공간을 할당받음
      명령어들과 데이터를 가짐

2. CPU 
    - 명령어를 실행하는 연산장치
    
3. 메인 메모리
    - 프로세스가 CPU에서 실행되기 위해 대기하는 곳

4. IO (Input/Output)
    - 파일을 읽고 쓰거나 네트워크의 어딘가와 데이터를 주고 받는 것
      입출력 장치와 데이터를 주거나 받는 것

5. 단일 프로세스 시스템
    - 한 번에 하나의 프로그램만 실행됨

    단점 : CPU 사용률이 좋지 않음 (실행 중에 있는 프로세스가 I/O 작업을 하는 동안에는 CPU가 아무작업도 하지 않고 놀고 있음)

    해결책 : 여러 개의 프로그램을 메모리에 올려놓고 동시에 실행시킴
             IO작업이 발생하면 다른 프로세스가 CPU에서 실행됨

    -->> 멀티프로그래밍

6. 멀티프로그래밍
    목적 : CPU 사용률을 극대화 시키는데 목적
    단점 : CPU 사용시간이 길어지면 다른 프로세스는 계속 대기

    해결책 : 프로세스는 한번 CPU를 사용할 떄 아주 짧은 시간(진짜 짧음, 밀리세컨드)만 CPU에서 실행되도록 함
    
    -->> 멀티태스킹

7. 멀티태스킹 
    멀티프로그래밍과 대부분 비슷
    큰 차이점(핵심) : CPU 타임을 아주 짧게 쪼개서 CPU 타임안에서 프로세스들이 서로 번갈아 가면서 실행될 수 있도록 함

    목적 : 프로세스의 응답시간을 최소화 시키는데 있음

    아쉬운 점1 : 하나의 프로세스가 동시에 여러 작업을 수행하지는 못함
    아쉬운 점2 : 프로세스의 컨텍스트 스위칭은 무거운 작업

    ** 컨텍스트 스위칭 : CPU에서 실행되기 위해서 어느 한 프로세스에서 다른 프로세스로 교체되는 것

    아쉬운 점3 : 프로세스끼리 데이터 공유가 까다로움
    아쉬운 점4 : 듀얼코어가 등장했는데 잘 쓰고 싶음

    해결책 : 스레드의 사용

8. 스레드 
    특징1 : 프로세스는 한 개 이상의 스레드를 가질 수 있다.
    특징2 : CPU에서 실행되는 단위 (Unit Of Execution)
    특징3 : 같은 프로세스의 스레드들끼리 컨텍스트 스위칭은 가볍다.
    특징4 : 자신들이 속한 프로세스의 메모리 영역을 공유한다.
        -> 같은 프로세스 영역의 스레드끼리는 데이터 공유가 쉬움
    특징5 : 그렇더라도 스레드들만의 고유한 영역도 있다.

    ** 프로그램 카운터 : 다음번에 실행되어야 될 명령어가 있는 메모리 주소


9. 멀티스레딩 
    목적 : 하나의 프로세스가 동시에 여러 작업을 실행하는데 목적이 있다.
    확장된 멀티태스킹의 개념 : 
        여러 프로세스와 여러 스레드가 아주 짧게 쪼개진 CPU TIME을 나눠 갖는것


10. 멀티프로세싱
    두 개 이상의 프로세스나 코어를 활용하는 시스템


EX1) 싱글코어 CPU에 싱글-스레드 프로세스 두 대 
    -->> 멀티태스킹 O, 멀티스레딩 X, 멀티프로세싱 X

EX2) 싱글코어 CPU에 듀얼-스레드 프로세스 한 개
    -->> 멀티태스킹 O, 멀티스레딩 O, 멀티프로세싱 X

EX3) 듀얼코어 CPU에 싱글-스레드 프로세스 두 개
    -->> 멀티태스킹 X, 멀티스레딩 X, 멀티프로세싱 O

EX4) 듀얼코어 CPU에 듀얼-스레드 프로세스 한 개
    -->> 멀티태스킹 X, 멀티스레딩 O, 멀티프로세싱 O

EX5) 듀얼코어 CPU에 듀얼-스레드 프로세스 두 개
    -->> 멀티태스킹 O, 멀티스레딩 O, 멀티프로세싱 O


BY 쉬운 코드